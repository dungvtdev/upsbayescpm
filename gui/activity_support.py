#! /usr/bin/env python
#
# Support module generated by PAGE version 4.8.6
# In conjunction with Tcl version 8.6
#    Nov 25, 2016 06:58:19 PM


import sys
from copy import deepcopy
from . import form_duration
from . import mainapp

try:
    from Tkinter import *
except ImportError:
    from tkinter import *

try:
    import ttk
    py3 = 0
except ImportError:
    import tkinter.ttk as ttk
    py3 = 1

""" Model
"""
parents = None
form = None

orig_activity_node = None
activity_node = None
callback_function = None

def set_Tk_var():
    # These are Tk variables used passed to Tkinter and must be
    # defined before the widgets using them are created.
    global var_msg_log
    var_msg_log = StringVar()

    global cmb_plot_type
    cmb_plot_type = StringVar()

    global txt_name
    txt_name = StringVar()


def cmd_cancel():
    print('activity_support.cmd_cancel')
    sys.stdout.flush()
    callback_function(orig_activity_node, None)

def cmd_help():
    print('activity_support.cmd_help')
    sys.stdout.flush()

def cmd_ok():
    global var_msg_log, callback_function, orig_activity_node, activity_node
    print('activity_support.cmd_ok')
    sys.stdout.flush()
    activity_node.name = txt_name.get()
    callback_function(orig_activity_node, activity_node)


def cmd_open_duration():
    print('activity_support.cmd_open_duration')
    sys.stdout.flush()
    top, _ = form_duration.create_Duration_Model(parents[0],
                                                 duration_model=activity_node.duration_model,
                                                 callback=on_duration_form_callback)
    mainapp.open_window('duration',top)

def cmd_plot():
    print('activity_support.cmd_plot')
    sys.stdout.flush()

def init(top, gui, *args, **kwargs):
    global w, top_level, root, orig_activity_node, activity_node, callback_function, txt_name
    w = gui
    top_level = top
    root = top

    orig_activity_node = kwargs['activity_node']
    activity_node = deepcopy(orig_activity_node)
    callback_function = kwargs['callback']

    # init
    txt_name.set(activity_node.name)

def destroy_window():
    # Function which closes the window.
    global top_level
    top_level.destroy()
    top_level = None


def on_duration_form_callback(duration_model, new_duration_model):
    mainapp.destroy_window('duration')
    if new_duration_model:
        activity_node.replace_duration(new_duration_model)


if __name__ == '__main__':
    import activity
    activity.vp_start_gui()
